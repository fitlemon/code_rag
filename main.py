import gradio as gr
import re
import ollama
from langchain_community.document_loaders import PyPDFLoader
from langchain_community.vectorstores import FAISS
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain_core.documents import Document
from langchain_ollama import OllamaEmbeddings

from fastapi import FastAPI

# 1) –ü–†–ï–î–û–ë–†–ê–ë–û–¢–ö–ê: –∑–∞–≥—Ä—É–∑–∫–∞ PDF, —Å–æ–∑–¥–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏ retriever
filepath = "data/user-guide.pdf"
loader = PyPDFLoader(filepath)
init_docs = loader.load()

# –†–∞–∑–±–∏–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ chunks
recursive_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=100)
split_docs = recursive_splitter.split_documents(init_docs)


# –°–æ–∑–¥–∞—ë–º –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä Ollama
embeddings = OllamaEmbeddings(
    model="bge-m3",
)
# –°–æ–∑–¥–∞—ë–º –≤–µ–∫—Ç–æ—Ä–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (FAISS).
vector_store = FAISS.from_documents(documents=split_docs, embedding=embeddings)
retriever = vector_store.as_retriever()

# 2) –°–ò–°–¢–ï–ú–ù–´–ô –ü–†–û–ú–ü–¢
system_prompt = """–¢—ã ‚Äì –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –≤ —Ä–µ–∂–∏–º–µ RAG (Retrieval-Augmented Generation), –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç –æ—Ç–≤–µ—Ç—ã —Å—Ç—Ä–æ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤—ã–¥–µ—Ä–∂–µ–∫ –∏–∑ ¬´–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª.

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:

1. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º—É –∫–æ–Ω—Ç–µ–∫—Å—Ç—É. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞—Ö, —Å–æ–æ–±—â–∞–π, —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π.
2. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–º—ã—Å–ª–æ–≤ –∏–ª–∏ –≤–Ω–µ—à–Ω–∏—Ö –∑–Ω–∞–Ω–∏–π. –ò–∑–±–µ–≥–∞–π —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–Ω–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
3. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –ø—Ä—è–º–æ —É–∫–∞–∂–∏, —á—Ç–æ ¬´–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É¬ª.
4. –°—Ç–∞—Ä–∞–π—Å—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –ª–∞–∫–æ–Ω–∏—á–Ω–æ, —è—Å–Ω–æ –≤—ã–¥–µ–ª—è—è –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
5. –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–µ –∏–∑–º—ã—à–ª—è–π —Ñ–∞–∫—Ç—ã.
6. –û–±–æ—Ä–∞—á–∏–≤–∞–π –∫–æ–¥ –≤ —Ç—Ä–æ–π–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ (–ù–∞–ø—Ä–∏–º–µ—Ä, ```bash) –∏ —É–∫–∞–∑—ã–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.

–ü—Ä–∏–º–µ—Ä –ø–æ–≤–µ–¥–µ–Ω–∏—è

–í–æ–ø—Ä–æ—Å: ¬´–∫–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–≥–∞—à–µ–Ω–∏–µ –∞–≤–∞—Ä–∏–∏?¬ª
–ö–æ–Ω—Ç–µ–∫—Å—Ç: ... (–≤—ã–¥–µ—Ä–∂–∫–∏ –∏–∑ ¬´–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª) ...
–û—Ç–≤–µ—Ç: ¬´–î–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–≥–∞—à–µ–Ω–∏—è –∞–≤–∞—Ä–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞ –ø–∞–Ω–µ–ª–∏ —Ä–µ–∂–∏–º–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
–í –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ –≤–≤–µ—Ä—Ö—É –æ–∫–Ω–∞ –≤—ã–±–µ—Ä–∏—Ç–µ "–ê–∫—Ç–∏–≤–Ω—ã–µ –∞–≤–∞—Ä–∏–∏".
–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–≥–∞—à–µ–Ω–Ω—É—é –∞–≤–∞—Ä–∏—é, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏.
–í –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–≥–∞—à–µ–Ω–∏–µ".
–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∞–≤–∞—Ä–∏—è –ø–µ—Ä–µ–π–¥—ë—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –¥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è.
–¢–∞–∫–∂–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–≥–∞—à–µ–Ω–∏–µ –∞–≤–∞—Ä–∏–∏ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é REST –∑–∞–ø—Ä–æ—Å–∞ "–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–≥–∞—à–µ–Ω–∏–µ –∞–≤–∞—Ä–∏–∏"
–î–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è ID –∞–≤–∞—Ä–∏–∏.
```bash
login=<...>
password=<...>
incident_id=<...>
saymon_hostname=<...>
url=https://$saymon_hostname/node/api/incidents/$incident_id/undo-clear
curl -X POST $url -u $login:$password
```
–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ 13.¬ª
"""


# 3) –§–£–ù–ö–¶–ò–ò –î–õ–Ø RAG
def format_docs(docs):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫,
    —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ –∫–∞–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ Llama —á–µ—Ä–µ–∑ Ollama.
    """
    return "\n\n".join(
        f"–¢–µ–∫—Å—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {doc.page_content}\n–°—Ç—Ä–∞–Ω–∏—Ü–∞: {doc.metadata.get('page_label', 'N/A')}"
        for doc in docs
    )


def ollama_llm(question, context):
    """
    –í—ã–∑—ã–≤–∞–µ—Ç –º–æ–¥–µ–ª—å Llama 3.1 (—á–µ—Ä–µ–∑ ollama.chat) —Å —É—á—ë—Ç–æ–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    """
    formatted_prompt = f"""–í–æ–ø—Ä–æ—Å: "{question}"\n–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}"""
    stream = ollama.chat(
        model="llama3.1",
        stream=True,
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": formatted_prompt},
        ],
    )
    return stream


def rag_chain(question: str) -> str:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø–æ –≤–æ–ø—Ä–æ—Å—É –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –∏—Ö –≤ LLM.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.
    """
    retrieved_docs = retriever.invoke(question)
    formatted_context = format_docs(retrieved_docs)
    return ollama_llm(question, formatted_context)


# 4) GRADIO UI
def handle_user_question(user_question, chat_history):
    """
    –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç,
    –∑–∞—Ç–µ–º –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ "–¥–æ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç" –æ—Ç–≤–µ—Ç.
    """
    # 1) –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –∏—Å—Ç–æ—Ä–∏—é (–ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç)
    chat_history.append((user_question, ""))
    yield "", chat_history  # —Ä–µ–Ω–¥–µ—Ä–∏–º, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É —É–≤–∏–¥–µ—Ç—å –≤–æ–ø—Ä–æ—Å

    # 2) –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
    chat_history[-1] = (user_question, "–ø–µ—á–∞—Ç–∞–µ—Ç...")
    yield "", chat_history  # —Ä–µ–Ω–¥–µ—Ä–∏–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–µ–ª placeholder

    # –ü–æ–ª—É—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ –æ—Ç rag_chain
    stream = rag_chain(user_question)

    partial_answer = ""
    for chunk in stream:  # chunk -- —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ (—á–∞—Å—Ç—å –æ—Ç–≤–µ—Ç–∞), –ø—Ä–∏—Ö–æ–¥—è—â–∞—è –æ—Ç Ollama
        response = chunk["message"]["content"]
        partial_answer += response
        # –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç chat_history –Ω–∞ "—Ç–µ–∫—É—â–∏–π —á–∞—Å—Ç–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç"
        chat_history[-1] = (user_question, partial_answer)
        yield "", chat_history


with gr.Blocks() as user_block:
    gr.Markdown("## –ß–∞—Ç-–±–æ—Ç (RAG) –ø–æ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    chatbot = gr.Chatbot(label="DOC AI")
    msg = gr.Textbox(label="–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∫–∞—Å–∞—é—â–∏–π—Å—è –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    submit = gr.Button("‚û§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å")

    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é handle_user_question
    msg.submit(handle_user_question, inputs=[msg, chatbot], outputs=[msg, chatbot])
    submit.click(handle_user_question, inputs=[msg, chatbot], outputs=[msg, chatbot])

    # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
    clear_btn = gr.ClearButton([msg, chatbot, chatbot], value="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é")

if __name__ == "__main__":
    user_block.launch(share=True)
